[ ] api.models mejorar con errores de pedidos y ver cuales mejorar
[ ] docs socketio template
[ ] webService espol generador npm
[ ] ruta /profesor/preguntasEstudianteHoy/:paraleloId

// TEST
unit
integration
perfomance test
e2e test

// TESTING CAMBIOS

* endpoint no encontrado api
* endpoint error api
* Testing error
* Refactor todo el codigo
* Ver como aplicar correctamente el SOLID
* Un profesor puede tener varios paralelos
* Se tiene que copiar los alumnos de la web service de espol a la base de datos aqui
* Se tienen que aseguar que el profesor termine de preguntaar

      // Socket.in(`${paraleloId}`).emit('respuesta-estudiante', respuesta)
      // socket.join(`${paraleloId}`)
      // io.of('/other namespace')
      // enviar las preguntas
      // si esta preguntand, enviar las respuestas

          socket.on('usuario', function({ paraleloId }) {
      // console.log(mensaje)
    })
        socket.on('pregunta-profesor', function({ paraleloId }) {
      socket.in(paraleloId).emit('pregunta-estudiante')
    })
    socket.on('habilitar-pregunta-profesor', function({ paraleloId, preguntaId }) {
      
    })
    socket.on('deshabilitar-pregunta-profesor', function({ paraleloId, preguntaId }) {
      
    })
    socket.on('respuesta-estudiante', function({ paraleloId }) {
      socket.in(paraleloId).emit('respuesta-estudiante')
    })
    socket.on('reconectar-estudiante', function({ }) { 
      // si esta preguntando profesor enviar la pregunta y habiliar
    })
    socket.on('reconectar-profesor', function({ }) {
      // enviar las preguntas
      // si esta preguntand, enviar las respuestas
    })